{"version":3,"sources":["components/NavBar.jsx","components/recipeTypes.js","components/Home.jsx","components/SearchBar.jsx","components/Header.jsx","config.js","components/Recipe.jsx","components/RecipesList.jsx","components/RecipeSearch.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","to","recipeTypes","Home","handleChange","event","setState","userInput","target","value","keyPress","key","submitForm","state","props","history","push","randomRecipes","index","Math","floor","random","length","id","htmlFor","type","placeholder","this","onChange","onKeyPress","Box","m","Button","variant","title","style","fontSize","fontWeight","onClick","Component","SearchBar","window","location","reload","withRouter","Header","config","edamam","ID","newsAPI","Recipe","meal","console","log","Card","elevation","CardActionArea","href","url","CardContent","Typography","gutterBottom","component","label","cuisineType","toUpperCase","dishType","mealType","CardMedia","alt","src","image","height","Recipes","componentDidMount","a","fetchRecipes","recipe","apiKey","apiID","fetch","response","json","data","count","resultExists","meals","hits","map","Lunch","Dinner","Snack","Teatime","Grid","container","spacing","justify","item","RecipeSearch","match","params","App","exact","path","RecipesList","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04fea24a.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <div className=\"navBar\">\r\n            <div className=\"navItem\"><Link to=\"/\"> Home </Link></div>\r\n            <div className=\"navItem\"><Link to=\"/recipes\"> Recipes </Link></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavBar;","const recipeTypes = [\r\n    'Lunch',\r\n    'Dinner',\r\n    'Snack',\r\n    'Teatime',\r\n    'Alcohol-cocktail',\r\n    'Biscuits and cookies',\r\n    'Bread',\r\n    'Cereals',\r\n    'Condiments and sauces',\r\n    'Drinks',\r\n    'Desserts',\r\n    'Egg',\r\n    'Main course',\r\n    'Omelet',\r\n    'Pancake',\r\n    'Preps',\r\n    'Preserve',\r\n    'Salad',\r\n    'Sandwiches',\r\n    'Soup',\r\n    'Starter',\r\n    'American',\r\n    'Asian',\r\n    'British',\r\n    'Caribbean',\r\n    'Central Europe',\r\n    'Chinese',\r\n    'Eastern Europe',\r\n    'French',\r\n    'Indian',\r\n    'Italian',\r\n    'Japanese',\r\n    'Kosher',\r\n    'Mediterranean',\r\n    'Mexican',\r\n    'Middle Eastern',\r\n    'Nordic',\r\n    'South American',\r\n    'South East Asian',\r\n    'balanced',\r\n    'high-fiber',\r\n    'high-protein',\r\n    'low-carb',\r\n    'low-fat',\r\n    'low-sodium',\r\n    'alcohol-free',\r\n    'immuno-supportive',\r\n    'celery-free',\r\n    'crustacean-free',\r\n    'dairy-free',\r\n    'egg-free',\r\n    'fish-free',\r\n    'fodmap-free',\r\n    'gluten-free',\r\n    'keto-friendly',\r\n    'kidney-friendly',\r\n    'kosher',\r\n    'potassium',\r\n    'lupine-free',\r\n    'mustard-free',\r\n    'low-fat-abs',\r\n    'No-oil-added',\r\n    'low-sugar',\r\n    'paleo',\r\n    'peanut-free',\r\n    'pecatarian',\r\n    'pork-free',\r\n    'red-meat-free',\r\n    'sesame-free',\r\n    'shellfish-free',\r\n    'soy-free',\r\n    'sugar-conscious',\r\n    'tree-nut-free',\r\n    'vegan',\r\n    'vegetarian',\r\n    'wheat-free'\r\n]\r\n\r\nexport default recipeTypes;","import React, { Component } from 'react';\r\nimport './Home.css';\r\nimport {Button, Box} from '@material-ui/core';\r\nimport NavBar from './NavBar';\r\nimport recipeTypes from './recipeTypes';\r\n\r\nclass Home extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            userInput: \"\",\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({userInput: event.target.value});\r\n    }\r\n\r\n    keyPress = (event) => {\r\n        // on enter in textbox, call submitForm to change URL\r\n        if (event.key === \"Enter\"){\r\n            this.submitForm();\r\n        }\r\n    }\r\n\r\n    submitForm = () => {\r\n        if (!this.state.userInput){\r\n            return;\r\n        }\r\n\r\n        // change URL link by pushing to history\r\n        this.props.history.push(`/search/${this.state.userInput}`);\r\n    }\r\n\r\n    randomRecipes = () => {\r\n        const index = Math.floor(Math.random() * recipeTypes.length);\r\n        this.props.history.push(`/search/${recipeTypes[index]}`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"homePage\">\r\n                <NavBar />\r\n                <div className=\"homeTitle\">\r\n                    Dish It Out\r\n                \r\n                    <div id=\"homeSearchForm\">\r\n                        <label htmlFor=\"homeSearchBar\">\r\n                            <input id=\"homeSearchBar\" type=\"text\" placeholder=\"Find recipes...\" value={this.state.userInput} onChange={this.handleChange} onKeyPress={this.keyPress}/>\r\n                        </label>\r\n\r\n                        <div id=\"homeSearchButtons\">\r\n                            <Box m={1}>\r\n                                <Button type=\"submit\" variant=\"contained\" title=\"Submit\" style={{fontSize: '0.25em', fontWeight:\"bold\"}} \r\n                                onClick={this.submitForm}>\r\n                                    Search\r\n                                </Button>\r\n                            </Box>\r\n                            <Box m={1}>\r\n                                <Button type=\"text\" title=\"Randomly generate a meal\" variant=\"contained\" style={{fontSize: '0.25em', fontWeight:\"bold\"}} onClick={this.randomRecipes}>Indecisive and Hungry</Button>\r\n                            </Box>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router';\r\n\r\nclass SearchBar extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            userInput: \"\",\r\n        }\r\n    }\r\n \r\n    // enter user input into state which will show in textbox\r\n    handleChange = (event) => {\r\n        this.setState({userInput: event.target.value});\r\n    }\r\n\r\n    keyPress = (event) => {\r\n        // on enter in textbox, call submitForm to change URL\r\n        if (event.key === \"Enter\"){\r\n            this.submitForm();\r\n        }\r\n    }\r\n\r\n    submitForm = () => {\r\n        if (!this.state.userInput){\r\n            return;\r\n        }\r\n        \r\n        // change URL link by pushing to history\r\n        this.props.history.push(`/search/${this.state.userInput}`);\r\n    \r\n        // refresh the page after url has been changed to get API query\r\n        window.location.reload();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"searchBarContainer\">\r\n                    <label htmlFor=\"searchBar\">\r\n                        <input id=\"searchBar\" type=\"text\" placeholder=\"Search recipe...\"  value={this.state.userInput} onChange={this.handleChange} onKeyPress={this.keyPress}/>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// connect SearchBar component to router in order to get access to history\r\nexport default withRouter(SearchBar);","import React from 'react';\r\nimport NavBar from './NavBar';\r\nimport SearchBar from './SearchBar';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"headerContainer\">\r\n            <div className=\"pageName\">\r\n                Dish It Out\r\n            </div>\r\n            <SearchBar />\r\n            <NavBar />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","// API keys\r\n// file is listed in .gitignore so keys won't be uploaded\r\n// and publically visible\r\n\r\n// confirm that config.js is not going to be included in [git add] by doing [git status] first and then making sure config.js is not in \r\n// Untracked files that'll be included in what will be commited\r\n\r\nvar config = {\r\n    edamam: {key:\"9281d45f94cf8726dec208f17c54fcb1\", ID:\"e6f0a3f9\"},\r\n    newsAPI: '830f5aaa56374b91b27c3e5a138af549',\r\n}\r\n\r\nexport default config;","import React, { Component } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nclass Recipe extends Component {\r\n    render() {\r\n        const {meal} = this.props;\r\n        console.log(\"Recipe.jsx \", meal)\r\n        return(\r\n            //  materialUI Card component\r\n            <Card className=\"RecipeContainer\" elevation={5} m={3}>\r\n                {/* make card clickable */}\r\n                <CardActionArea href={meal.url} target=\"_blank\">\r\n                    {/* info for card */}\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            {meal.label}\r\n                        </Typography>\r\n                        \r\n\r\n                        \r\n                        <Typography gutterBottom variant=\"subtitle2\" component=\"h2\">\r\n                        <div className=\"cuisineType\">\r\n                            {meal.cuisineType[0].toUpperCase()}\r\n                        </div>\r\n                        <div className=\"mealType\">\r\n                            {meal.dishType[0].toUpperCase()}, {meal.mealType[0].toUpperCase()}\r\n                        </div>\r\n\r\n                        </Typography>\r\n                    </CardContent>\r\n                    {/* image */}\r\n                    <CardMedia component=\"img\" alt={meal.label} title={meal.label} src={meal.image} height=\"250\"/>\r\n                    \r\n\r\n                </CardActionArea>\r\n            </Card>\r\n\r\n          \r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Recipe;","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport recipeTypes from './recipeTypes';\r\nimport config from '../config';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Box} from '@material-ui/core';\r\nimport Recipe from './Recipe';\r\n// import data from './dummydata';\r\n\r\nclass Recipes extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            Lunch:[],\r\n            Dinner:[],\r\n            Snack:[],\r\n            Teatime:[],\r\n            resultExists:true,\r\n        }\r\n    }\r\n\r\n    componentDidMount = async() => {\r\n        // list all of the recipes for lunch, dinner, snack\r\n        \r\n        for (let index = 0; index < 4; index++){\r\n            console.log(recipeTypes[index]);\r\n            this.fetchRecipes(recipeTypes[index]);\r\n        }\r\n    }\r\n\r\n    fetchRecipes = async (recipe) => {\r\n        // get API keys from config.js\r\n        const apiKey = config.edamam.key;\r\n        const apiID = config.edamam.ID;\r\n\r\n        // object destructuring\r\n        // const {recipe} is same as this.props.match.params.recipe\r\n\r\n        // https://reactrouter.com/web/api/match\r\n        // recipe value comes from Router in App.js where dynamic values  are parsed from URL into matched key/value pairs\r\n        // path=\"/recipes/:recipe\" will create dynamic key called recipe and its value (the actual recipe word) added to .match.params\r\n        console.log(\"fetchRecipe\", recipe)\r\n        try{\r\n            // LIMITED 10,000 calls per month\r\n            const response = await fetch(`https://api.edamam.com/search?q=${recipe}&app_id=${apiID}&app_key=${apiKey}`);\r\n            const data = await response.json();\r\n            console.log(data.count)\r\n            if (data.count === 0){\r\n                this.setState({resultExists:false});\r\n                return\r\n            }\r\n            \r\n            const meals = data.hits.map((index) => {\r\n                return index.recipe;\r\n            })\r\n            console.log(\"meals\", meals);\r\n            this.setState({[recipe]:meals});\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"recipesListContainer\">\r\n                {console.log(this.state.Lunch)}\r\n\r\n                <Header />\r\n\r\n                {!this.state.resultExists \r\n                    ? <h3 className=\"noResults\">No results found</h3>\r\n                    : (<div> <Box m={3}>\r\n                            <Grid container className=\"searchResultsGrid\" spacing={4} justify=\"center\">\r\n                                {this.state.Lunch.map((meal, index) => {\r\n                                    if (!meal.dishType || !meal.mealType ){\r\n                                        return;\r\n                                    }\r\n                                    return <Grid item key={`${meal.label}-${index}`}><Recipe meal={meal} /></Grid>\r\n                                })} \r\n                            \r\n                                {this.state.Dinner.map((meal, index) => {\r\n                                    if (!meal.dishType || !meal.mealType ){\r\n                                        return;\r\n                                    }\r\n                                    return <Grid item key={`${meal.label}-${index}`}><Recipe meal={meal} /></Grid>\r\n                                })} \r\n\r\n                                {this.state.Snack.map((meal, index) => {\r\n                                    if (!meal.dishType || !meal.mealType ){\r\n                                        return;\r\n                                    }\r\n                                    return <Grid item key={`${meal.label}-${index}`}><Recipe meal={meal} /></Grid>\r\n                                })} \r\n\r\n                                {this.state.Teatime.map((meal, index) => {\r\n                                    if (!meal.dishType || !meal.mealType ){\r\n                                        return;\r\n                                    }\r\n                                    return <Grid item key={`${meal.label}-${index}`}><Recipe meal={meal} /></Grid>\r\n                                })} \r\n                            </Grid>\r\n                        </Box>\r\n                    </div>)\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Recipes;","import React, { Component } from 'react';\r\nimport config from '../config';\r\nimport Recipe from './Recipe';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Box} from '@material-ui/core';\r\nimport Header from './Header';\r\n// import data from './dummydata';\r\n\r\nclass RecipeSearch extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state={\r\n            meals:[],\r\n            data: \"\",\r\n            resultExists:true,\r\n        }\r\n    }\r\n    \r\n    componentDidMount = async () => {\r\n        // get API keys from config.js\r\n        const apiKey = config.edamam.key;\r\n        const apiID = config.edamam.ID;\r\n\r\n        // object destructuring\r\n        // const {recipe} is same as this.props.match.params.recipe\r\n\r\n        // https://reactrouter.com/web/api/match\r\n        // recipe value comes from Router in App.js where dynamic values  are parsed from URL into matched key/value pairs\r\n        // path=\"/recipes/:recipe\" will create dynamic key called recipe and its value (the actual recipe word) added to .match.params\r\n        const {recipe} = this.props.match.params;\r\n        console.log(recipe)\r\n        try{\r\n            // LIMITED 10,000 calls per month\r\n            const response = await fetch(`https://api.edamam.com/search?q=${recipe}&app_id=${apiID}&app_key=${apiKey}`);\r\n            const data = await response.json();\r\n\r\n            if (data.count === 0){\r\n                this.setState({resultExists:false});\r\n                return\r\n            }\r\n            \r\n            const meals = data.hits.map((index) => {\r\n                return index.recipe;\r\n            })\r\n\r\n            this.setState({meals});       \r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // {console.log(this.state.meals)};\r\n        return (\r\n            <div className=\"searchResultsContainer\">\r\n                <Header />\r\n\r\n                {/* if query doesn't give results, state no results found. else show Grid components */}\r\n                {!this.state.resultExists \r\n                    ? <h3 className=\"noResults\">No results found</h3>\r\n                    : (<Box m={3}>\r\n                            <Grid container className=\"searchResultsGrid\" spacing={4} justify=\"center\">\r\n                                {this.state.meals.map((meal, index) => {\r\n                                    if (!meal.dishType || !meal.mealType ){\r\n                                        return <div></div>;\r\n                                    }\r\n                                    return <Grid item key={`${meal.label}-${index}`} ><Recipe meal={meal} key={`${meal.label}-${index}`} /></Grid>\r\n                                })} \r\n                            </Grid>\r\n                        </Box>)\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RecipeSearch;","import './App.css';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport RecipesList from './components/RecipesList';\r\nimport RecipeSearch from './components/RecipeSearch';\r\n\r\n\r\n\r\n// https://developer.edamam.com/edamam-docs-recipe-api\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/recipes\" component={RecipesList} />\r\n          {/* :recipe shows that the value for recipe is dynamic */}\r\n          <Route path=\"/search/:recipe\" component={RecipeSearch} />\r\n          <Route path=\"*\" render={() => {return <div>404 ERROR NOT FOUND</div>}} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}